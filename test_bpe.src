▁ module ▁en tr y _ point ▁( ▁ , ▁a p _ start , ▁ , ▁a p _ done , ▁ , ▁a p _ idle , ▁ , ▁a p _ ready , ▁ , ▁speed , ▁ , ▁time _ r , ▁ , ▁temptemp 1 , ▁ , ▁temptemp 1_ a p _ vld , ▁ , ▁a p _ return ▁ , ▁) ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁ out put ▁a p _ idle ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁input ▁[3 1:0] ▁speed ; ▁ , ▁input ▁[3 1:0] ▁time _ r ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 1 ; ▁ , ▁ out put ▁temptemp 1_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁a p _ return ; ▁ , ▁reg ▁temptemp 1_ a p _ vld ; ▁ , ▁wi re ▁[3 1:0] ▁ d i sta n ce _ fu _ 45 _ p 2 ; ▁ , ▁wi re ▁a p _ ce _ reg ; ▁ , ▁en tr y _ point _ mu l _32 s _32 s _32_1_1 ▁#( ▁ , ▁. ID ( ▁ 1 ▁) , ▁ , ▁. N U M _ STAGE ( ▁ 1 ▁) , ▁ , ▁. din 0_ WIDTH ( ▁32 ▁) , ▁ , ▁. din 1_ WIDTH ( ▁32 ▁) , ▁ , ▁. dout _ WIDTH ( ▁32 ▁ )) ▁ , ▁ mu l _32 s _32 s _32_1_1 _ U 1( ▁ , ▁. din 0( t i m e _ r ) , ▁ , ▁. din 1( s p e ed ) , ▁ , ▁. dout ( d i sta n ce _ fu _ 45 _ p 2) ▁ , ▁) ; ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ as sign ▁a p _ done ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ idle ▁= ▁1' b 1 ; ▁ , ▁ as sign ▁a p _ ready ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ return ▁= ▁32 ' d 0 ; ▁ , ▁ as sign ▁temptemp 1 ▁= ▁ d i sta n ce _ fu _ 45 _ p 2 ; ▁ , ▁endmodule ▁ , ▁ module ▁en tr y _ point _ mu l _32 s _32 s _32_1_1 ( din 0 , ▁din 1 , ▁dout ) ; ▁ , ▁pa ra meter ▁ ID ▁= ▁ 1 ; ▁ , ▁pa ra meter ▁ N U M _ STAGE ▁= ▁ 0 ; ▁ , ▁pa ra meter ▁din 0_ WIDTH ▁= ▁ 14 ; ▁ , ▁pa ra meter ▁din 1_ WIDTH ▁= ▁ 1 2 ; ▁ , ▁pa ra meter ▁dout _ WIDTH ▁= ▁ 26 ; ▁ , ▁input ▁[ din 0_ WIDTH ▁ - ▁ 1 ▁ : ▁ 0] ▁din 0 ; ▁ , ▁input ▁[ din 1_ WIDTH ▁ - ▁ 1 ▁ : ▁ 0] ▁din 1 ; ▁ , ▁ out put ▁[ dout _ WIDTH ▁ - ▁ 1 ▁ : ▁ 0] ▁dout ; ▁ , ▁ as sign ▁dout ▁= ▁ $ signed ( din 0) ▁* ▁ $ signed ( din 1) ; ▁ , ▁endmodule
▁ module ▁en tr y _ point ▁( ▁ , ▁a p _ start , ▁ , ▁a p _ done , ▁ , ▁a p _ idle , ▁ , ▁a p _ ready , ▁ , ▁a _ i , ▁ , ▁a _ o , ▁ , ▁a _ o _ a p _ vld , ▁ , ▁b _ i , ▁ , ▁b _ o , ▁ , ▁b _ o _ a p _ vld , ▁ , ▁temptemp 1 , ▁ , ▁temptemp 1_ a p _ vld , ▁ , ▁temptemp 2 , ▁ , ▁temptemp 2_ a p _ vld , ▁ , ▁a p _ return ▁ , ▁) ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁ out put ▁a p _ idle ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁input ▁[3 1:0] ▁a _ i ; ▁ , ▁ out put ▁[3 1:0] ▁a _ o ; ▁ , ▁ out put ▁a _ o _ a p _ vld ; ▁ , ▁input ▁[3 1:0] ▁b _ i ; ▁ , ▁ out put ▁[3 1:0] ▁b _ o ; ▁ , ▁ out put ▁b _ o _ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 1 ; ▁ , ▁ out put ▁temptemp 1_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 2 ; ▁ , ▁ out put ▁temptemp 2_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁a p _ return ; ▁ , ▁reg ▁a _ o _ a p _ vld ; ▁ , ▁reg ▁b _ o _ a p _ vld ; ▁ , ▁reg ▁temptemp 1_ a p _ vld ; ▁ , ▁reg ▁temptemp 2_ a p _ vld ; ▁ , ▁wi re ▁a p _ ce _ reg ; ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁a _ o _ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a _ o _ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁b _ o _ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁b _ o _ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 2_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 2_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ as sign ▁a _ o ▁= ▁b _ i ; ▁ , ▁ as sign ▁a p _ done ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ idle ▁= ▁1' b 1 ; ▁ , ▁ as sign ▁a p _ ready ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ return ▁= ▁32 ' d 0 ; ▁ , ▁ as sign ▁b _ o ▁= ▁a _ i ; ▁ , ▁ as sign ▁temptemp 1 ▁= ▁b _ i ; ▁ , ▁ as sign ▁temptemp 2 ▁= ▁a _ i ; ▁ , ▁endmodule
▁ module ▁en tr y _ point ▁( ▁ , ▁a p _ clk , ▁ , ▁a p _ rst , ▁ , ▁a p _ start , ▁ , ▁a p _ done , ▁ , ▁a p _ idle , ▁ , ▁a p _ ready , ▁ , ▁ N , ▁ , ▁arr , ▁ , ▁temptemp 1 , ▁ , ▁temptemp 1_ a p _ vld , ▁ , ▁temptemp 2 , ▁ , ▁temptemp 2_ a p _ vld , ▁ , ▁a p _ return ▁ , ▁) ; ▁ , ▁pa ra meter ▁a p _ ST _ fsm _ state 1 ▁= ▁1' d 1 ; ▁ , ▁input ▁a p _ clk ; ▁ , ▁input ▁a p _ rst ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁ out put ▁a p _ idle ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁input ▁[3 1:0] ▁ N ; ▁ , ▁input ▁[3 1:0] ▁arr ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 1 ; ▁ , ▁ out put ▁temptemp 1_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 2 ; ▁ , ▁ out put ▁temptemp 2_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁a p _ return ; ▁ , ▁reg ▁a p _ idle ; ▁ , ▁reg ▁temptemp 1_ a p _ vld ; ▁ , ▁reg ▁temptemp 2_ a p _ vld ; ▁ , ▁(* ▁ fsm _ en co din g ▁= ▁ " n one " ▁* ) ▁reg ▁ [0:0] ▁a p _ C S _ fsm ; ▁ , ▁wi re ▁a p _ C S _ fsm _ state 1 ; ▁ , ▁reg ▁a p _ b loc k _ state 1_ p p 0_ sta ge 0_ i ter 0 ; ▁ , ▁wi re ▁ [0:0] ▁ ic mp _ ln 10_ fu _10 6_ p 2 ; ▁ , ▁reg ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ; ▁ , ▁wi re ▁a p _ lo o p _ ex it _ ready ; ▁ , ▁reg ▁a p _ ready _ int ; ▁ , ▁reg ▁[3 1:0] ▁ o dd _ fu _4 2 ; ▁ , ▁wi re ▁[3 1:0] ▁ o dd _ 2_ fu _13 6_ p 3 ; ▁ , ▁wi re ▁a p _ lo o p _ init ; ▁ , ▁reg ▁[3 1:0] ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d ; ▁ , ▁reg ▁[3 1:0] ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d _ 1 ; ▁ , ▁reg ▁[3 1:0] ▁ e v en _ fu _4 6 ; ▁ , ▁wi re ▁[3 1:0] ▁ e v en _ 2_ fu _14 4_ p 3 ; ▁ , ▁reg ▁[3 1:0] ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d ; ▁ , ▁reg ▁[3 1:0] ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d _ 1 ; ▁ , ▁reg ▁ [30:0] ▁ i _ fu _5 0 ; ▁ , ▁wi re ▁ [30:0] ▁a dd _ ln 10_ fu _11 2_ p 2 ; ▁ , ▁reg ▁ [30:0] ▁a p _ s ig _ al loc a c mp _ i _ lo a d ; ▁ , ▁wi re ▁[3 1:0] ▁ i _ cas t _ fu _10 2_ p 1 ; ▁ , ▁wi re ▁ [0:0] ▁ tr u nc _ ln 12_ fu _8 0_ p 1 ; ▁ , ▁wi re ▁[3 1:0] ▁ o dd _ 1_ fu _13 0_ p 2 ; ▁ , ▁wi re ▁[3 1:0] ▁ e v en _ 1_ fu _12 4_ p 2 ; ▁ , ▁reg ▁a p _ done _ reg ; ▁ , ▁wi re ▁a p _ continue _ int ; ▁ , ▁reg ▁a p _ done _ int ; ▁ , ▁reg ▁ [0:0] ▁a p _ N S _ fsm ; ▁ , ▁reg ▁a p _ ST _ fsm _ state 1_ blk ; ▁ , ▁wi re ▁a p _ start _ int ; ▁ , ▁wi re ▁a p _ ce _ reg ; ▁ , ▁ in iti al ▁b eg in ▁ , ▁# 0 ▁a p _ C S _ fsm ▁= ▁1' d 1 ; ▁ , ▁# 0 ▁a p _ done _ reg ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁en tr y _ point _ f lo w _ co ntr o l _ lo o p _ pipe ▁ f lo w _ co ntr o l _ lo o p _ pipe _ U ( ▁ , ▁. a p _ clk ( a p _ clk ) , ▁ , ▁. a p _ rst ( a p _ rst ) , ▁ , ▁. a p _ start ( a p _ start ) , ▁ , ▁. a p _ ready ( a p _ ready ) , ▁ , ▁. a p _ done ( a p _ done ) , ▁ , ▁. a p _ start _ int ( a p _ start _ int ) , ▁ , ▁. a p _ lo o p _ init ( a p _ lo o p _ init ) , ▁ , ▁. a p _ ready _ int ( a p _ ready _ int ) , ▁ , ▁. a p _ lo o p _ ex it _ ready ( a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0) , ▁ , ▁. a p _ lo o p _ ex it _ done ( a p _ done _ int ) , ▁ , ▁. a p _ continue _ int ( a p _ continue _ int ) , ▁ , ▁. a p _ done _ int ( a p _ done _ int ) , ▁ , ▁. a p _ continue (1' b 1) ▁ , ▁) ; ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ C S _ fsm ▁< = ▁a p _ ST _ fsm _ state 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ C S _ fsm ▁< = ▁a p _ N S _ fsm ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ done _ reg ▁< = ▁1' b 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁if ▁(( a p _ continue _ int ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁a p _ done _ reg ▁< = ▁1' b 0 ; ▁ , ▁end ▁el se ▁if ▁((( a p _ lo o p _ ex it _ ready ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁a p _ done _ reg ▁< = ▁1' b 1 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁(( (1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁if ▁(( ic mp _ ln 10_ fu _10 6_ p 2 ▁= = ▁1' d 1)) ▁b eg in ▁ , ▁ e v en _ fu _4 6 ▁< = ▁ e v en _ 2_ fu _14 4_ p 3 ; ▁ , ▁end ▁el se ▁if ▁(( a p _ lo o p _ init ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁ e v en _ fu _4 6 ▁< = ▁32 ' d 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁(( (1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁if ▁(( ic mp _ ln 10_ fu _10 6_ p 2 ▁= = ▁1' d 1)) ▁b eg in ▁ , ▁ i _ fu _5 0 ▁< = ▁a dd _ ln 10_ fu _11 2_ p 2 ; ▁ , ▁end ▁el se ▁if ▁(( a p _ lo o p _ init ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁ i _ fu _5 0 ▁< = ▁ 3 1 ' d 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁(( (1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁if ▁(( ic mp _ ln 10_ fu _10 6_ p 2 ▁= = ▁1' d 1)) ▁b eg in ▁ , ▁ o dd _ fu _4 2 ▁< = ▁ o dd _ 2_ fu _13 6_ p 3 ; ▁ , ▁end ▁el se ▁if ▁(( a p _ lo o p _ init ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁ o dd _ fu _4 2 ▁< = ▁32 ' d 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start _ int ▁= = ▁1' b 0)) ▁b eg in ▁ , ▁a p _ ST _ fsm _ state 1_ blk ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ ST _ fsm _ state 1_ blk ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( ic mp _ ln 10_ fu _10 6_ p 2 ▁= = ▁1' d 0) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ ex it _ ready ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁a p _ done _ int ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ done _ int ▁= ▁a p _ done _ reg ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( (1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 0)) ) ▁b eg in ▁ , ▁a p _ idle ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ idle ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( (1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁a p _ ready _ int ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ ready _ int ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d ▁= ▁32 ' d 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d ▁= ▁ e v en _ fu _4 6 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d _ 1 ▁= ▁32 ' d 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d _ 1 ▁= ▁ e v en _ fu _4 6 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ i _ lo a d ▁= ▁ 3 1 ' d 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ i _ lo a d ▁= ▁ i _ fu _5 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d ▁= ▁32 ' d 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d ▁= ▁ o dd _ fu _4 2 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d _ 1 ▁= ▁32 ' d 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d _ 1 ▁= ▁ o dd _ fu _4 2 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( ic mp _ ln 10_ fu _10 6_ p 2 ▁= = ▁1' d 0) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( ic mp _ ln 10_ fu _10 6_ p 2 ▁= = ▁1' d 0) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ state 1) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁temptemp 2_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 2_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁ ca se ▁( a p _ C S _ fsm ) ▁ , ▁a p _ ST _ fsm _ state 1 ▁ : ▁b eg in ▁ , ▁a p _ N S _ fsm ▁= ▁a p _ ST _ fsm _ state 1 ; ▁ , ▁end ▁ , ▁de f a ult ▁ : ▁b eg in ▁ , ▁a p _ N S _ fsm ▁= ▁ ' b x ; ▁ , ▁end ▁ , ▁end ca se ▁ , ▁end ▁ , ▁ as sign ▁a dd _ ln 10_ fu _11 2_ p 2 ▁= ▁( a p _ s ig _ al loc a c mp _ i _ lo a d ▁ + ▁ 3 1 ' d 1) ; ▁ , ▁ as sign ▁a p _ C S _ fsm _ state 1 ▁= ▁a p _ C S _ fsm [32 ' d 0] ; ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁a p _ b loc k _ state 1_ p p 0_ sta ge 0_ i ter 0 ▁= ▁( a p _ start _ int ▁= = ▁1' b 0) ; ▁ , ▁end ▁ , ▁ as sign ▁a p _ lo o p _ ex it _ ready ▁= ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ; ▁ , ▁ as sign ▁a p _ return ▁= ▁32 ' d 0 ; ▁ , ▁ as sign ▁ e v en _ 1_ fu _12 4_ p 2 ▁= ▁( a p _ s ig _ al loc a c mp _ e v en _ lo a d ▁ + ▁32 ' d 1) ; ▁ , ▁ as sign ▁ e v en _ 2_ fu _14 4_ p 3 ▁= ▁(( tr u nc _ ln 12_ fu _8 0_ p 1 [0:0] ▁= = ▁1' b 1) ▁ ? ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d ▁ : ▁ e v en _ 1_ fu _12 4_ p 2) ; ▁ , ▁ as sign ▁ i _ cas t _ fu _10 2_ p 1 ▁= ▁a p _ s ig _ al loc a c mp _ i _ lo a d ; ▁ , ▁ as sign ▁ ic mp _ ln 10_ fu _10 6_ p 2 ▁= ▁(( $ signed ( i _ cas t _ fu _10 2_ p 1) ▁< ▁ $ signed ( N )) ▁ ? ▁1' b 1 ▁ : ▁1' b 0) ; ▁ , ▁ as sign ▁ o dd _ 1_ fu _13 0_ p 2 ▁= ▁( a p _ s ig _ al loc a c mp _ o dd _ lo a d ▁ + ▁32 ' d 1) ; ▁ , ▁ as sign ▁ o dd _ 2_ fu _13 6_ p 3 ▁= ▁(( tr u nc _ ln 12_ fu _8 0_ p 1 [0:0] ▁= = ▁1' b 1) ▁ ? ▁ o dd _ 1_ fu _13 0_ p 2 ▁ : ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d ) ; ▁ , ▁ as sign ▁temptemp 1 ▁= ▁a p _ s ig _ al loc a c mp _ e v en _ lo a d _ 1 ; ▁ , ▁ as sign ▁temptemp 2 ▁= ▁a p _ s ig _ al loc a c mp _ o dd _ lo a d _ 1 ; ▁ , ▁ as sign ▁ tr u nc _ ln 12_ fu _8 0_ p 1 ▁= ▁arr [0:0] ; ▁ , ▁endmodule ▁ , ▁ module ▁en tr y _ point _ f lo w _ co ntr o l _ lo o p _ pipe ( ▁ , ▁a p _ clk , ▁ , ▁a p _ rst , ▁ , ▁a p _ start , ▁ , ▁a p _ ready , ▁ , ▁a p _ done , ▁ , ▁a p _ continue , ▁ , ▁a p _ start _ int , ▁ , ▁a p _ ready _ int , ▁ , ▁a p _ done _ int , ▁ , ▁a p _ continue _ int , ▁ , ▁a p _ lo o p _ init , ▁ , ▁a p _ lo o p _ ex it _ ready , ▁ , ▁a p _ lo o p _ ex it _ done ▁ , ▁) ; ▁ , ▁input ▁a p _ clk ; ▁ , ▁input ▁a p _ rst ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁input ▁a p _ continue ; ▁ , ▁ out put ▁a p _ start _ int ; ▁ , ▁input ▁a p _ ready _ int ; ▁ , ▁input ▁a p _ done _ int ; ▁ , ▁ out put ▁a p _ continue _ int ; ▁ , ▁ out put ▁a p _ lo o p _ init ; ▁ , ▁reg ▁a p _ lo o p _ init ; ▁ , ▁input ▁a p _ lo o p _ ex it _ ready ; ▁ , ▁input ▁a p _ lo o p _ ex it _ done ; ▁ , ▁ in iti al ▁b eg in ▁ , ▁# 0 ▁a p _ lo o p _ init ▁= ▁1' b 1 ; ▁ , ▁end ▁ , ▁ as sign ▁a p _ start _ int ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ continue _ int ▁= ▁a p _ continue ; ▁ , ▁ as sign ▁a p _ done ▁= ▁a p _ lo o p _ ex it _ done ; ▁ , ▁ as sign ▁a p _ ready ▁= ▁a p _ lo o p _ ex it _ ready ; ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁ , ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ lo o p _ init ▁< = ▁1' b 1 ; ▁ , ▁end ▁el se ▁if ( a p _ lo o p _ ex it _ ready ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ lo o p _ init ▁< = ▁1' b 1 ; ▁ , ▁end ▁el se ▁if ( a p _ ready _ int ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ lo o p _ init ▁< = ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁endmodule
▁ module ▁en tr y _ point ▁( ▁ , ▁a p _ start , ▁ , ▁a p _ done , ▁ , ▁a p _ idle , ▁ , ▁a p _ ready , ▁ , ▁temptemp 1 , ▁ , ▁temptemp 1_ a p _ vld , ▁ , ▁temptemp 2 , ▁ , ▁temptemp 2_ a p _ vld , ▁ , ▁temptemp 3 , ▁ , ▁temptemp 3_ a p _ vld , ▁ , ▁temptemp 4 , ▁ , ▁temptemp 4_ a p _ vld , ▁ , ▁a p _ return ▁ , ▁) ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁ out put ▁a p _ idle ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 1 ; ▁ , ▁ out put ▁temptemp 1_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 2 ; ▁ , ▁ out put ▁temptemp 2_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 3 ; ▁ , ▁ out put ▁temptemp 3_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 4 ; ▁ , ▁ out put ▁temptemp 4_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁a p _ return ; ▁ , ▁reg ▁temptemp 1_ a p _ vld ; ▁ , ▁reg ▁temptemp 2_ a p _ vld ; ▁ , ▁reg ▁temptemp 3_ a p _ vld ; ▁ , ▁reg ▁temptemp 4_ a p _ vld ; ▁ , ▁wi re ▁a p _ ce _ reg ; ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 2_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 2_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 3_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 3_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( a p _ start ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁temptemp 4_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 4_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ as sign ▁a p _ done ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ idle ▁= ▁1' b 1 ; ▁ , ▁ as sign ▁a p _ ready ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ return ▁= ▁32 ' d 0 ; ▁ , ▁ as sign ▁temptemp 1 ▁= ▁32 ' d 1 ; ▁ , ▁ as sign ▁temptemp 2 ▁= ▁32 ' d 4 ; ▁ , ▁ as sign ▁temptemp 3 ▁= ▁32 ' d 4 ; ▁ , ▁ as sign ▁temptemp 4 ▁= ▁32 ' d 8 ; ▁ , ▁endmodule
▁ module ▁en tr y _ point ▁( ▁ , ▁a p _ clk , ▁ , ▁a p _ rst , ▁ , ▁a p _ start , ▁ , ▁a p _ done , ▁ , ▁a p _ idle , ▁ , ▁a p _ ready , ▁ , ▁n , ▁ , ▁temptemp 1 , ▁ , ▁temptemp 1_ a p _ vld , ▁ , ▁a p _ return ▁ , ▁) ; ▁ , ▁pa ra meter ▁a p _ ST _ fsm _ p p 0_ sta ge 0 ▁= ▁1' d 1 ; ▁ , ▁input ▁a p _ clk ; ▁ , ▁input ▁a p _ rst ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁ out put ▁a p _ idle ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁input ▁[3 1:0] ▁n ; ▁ , ▁ out put ▁[3 1:0] ▁temptemp 1 ; ▁ , ▁ out put ▁temptemp 1_ a p _ vld ; ▁ , ▁ out put ▁[3 1:0] ▁a p _ return ; ▁ , ▁reg ▁a p _ idle ; ▁ , ▁reg ▁temptemp 1_ a p _ vld ; ▁ , ▁(* ▁ fsm _ en co din g ▁= ▁ " n one " ▁* ) ▁reg ▁ [0:0] ▁a p _ C S _ fsm ; ▁ , ▁wi re ▁a p _ C S _ fsm _ p p 0_ sta ge 0 ; ▁ , ▁wi re ▁a p _ en a b le _ reg _ p p 0_ i ter 0 ; ▁ , ▁reg ▁a p _ en a b le _ reg _ p p 0_ i ter 1 ; ▁ , ▁reg ▁a p _ idle _ p p 0 ; ▁ , ▁wi re ▁a p _ b loc k _ state 1_ p p 0_ sta ge 0_ i ter 0 ; ▁ , ▁wi re ▁a p _ b loc k _ state 2_ p p 0_ sta ge 0_ i ter 1 ; ▁ , ▁wi re ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ; ▁ , ▁wi re ▁ [0:0] ▁ ic mp _ ln 9_ fu _9 7_ p 2 ; ▁ , ▁reg ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ; ▁ , ▁wi re ▁a p _ lo o p _ ex it _ ready ; ▁ , ▁reg ▁a p _ ready _ int ; ▁ , ▁wi re ▁a p _ b loc k _ p p 0_ sta ge 0_ 1 100 1 ; ▁ , ▁wi re ▁[6 :0] ▁arr _ a dd re s s 0 ; ▁ , ▁reg ▁arr _ ce 0 ; ▁ , ▁wi re ▁[3 1:0] ▁arr _ q 0 ; ▁ , ▁wi re ▁[6 3 :0] ▁ i _ cas t 1_ fu _10 9_ p 1 ; ▁ , ▁wi re ▁a p _ b loc k _ p p 0_ sta ge 0 ; ▁ , ▁reg ▁[3 1:0] ▁ s um _ fu _4 2 ; ▁ , ▁wi re ▁[3 1:0] ▁ s um _ 1_ fu _12 2_ p 2 ; ▁ , ▁reg ▁[3 1:0] ▁a p _ s ig _ al loc a c mp _ s um _ lo a d _ 1 ; ▁ , ▁wi re ▁a p _ lo o p _ init ; ▁ , ▁reg ▁ [30:0] ▁ i _ fu _4 6 ; ▁ , ▁wi re ▁ [30:0] ▁a dd _ ln 9_ fu _10 3_ p 2 ; ▁ , ▁reg ▁ [30:0] ▁a p _ s ig _ al loc a c mp _ i _ 1 ; ▁ , ▁wi re ▁a p _ b loc k _ p p 0_ sta ge 0_ 0 100 1 ; ▁ , ▁wi re ▁[3 1:0] ▁ i _ cas t _ fu _9 3_ p 1 ; ▁ , ▁reg ▁a p _ done _ reg ; ▁ , ▁wi re ▁a p _ continue _ int ; ▁ , ▁reg ▁a p _ done _ int ; ▁ , ▁reg ▁ [0:0] ▁a p _ N S _ fsm ; ▁ , ▁wi re ▁a p _ en a b le _ p p 0 ; ▁ , ▁wi re ▁a p _ start _ int ; ▁ , ▁reg ▁a p _ cond ition _ 85 ; ▁ , ▁wi re ▁a p _ ce _ reg ; ▁ , ▁ in iti al ▁b eg in ▁ , ▁# 0 ▁a p _ C S _ fsm ▁= ▁1' d 1 ; ▁ , ▁# 0 ▁a p _ en a b le _ reg _ p p 0_ i ter 1 ▁= ▁1' b 0 ; ▁ , ▁# 0 ▁a p _ done _ reg ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁en tr y _ point _ arr _ R A M _ A U T O _ 1 R 1 W ▁#( ▁ , ▁. D a t a W id t h ( ▁32 ▁) , ▁ , ▁. A dd re s s R a n ge ( ▁ 100 ▁) , ▁ , ▁. A dd re s s W id t h ( ▁ 7 ▁ )) ▁ , ▁arr _ U ( ▁ , ▁. clk ( a p _ clk ) , ▁ , ▁. reset ( a p _ rst ) , ▁ , ▁. a dd re s s 0( arr _ a dd re s s 0) , ▁ , ▁. ce 0( arr _ ce 0) , ▁ , ▁. q 0( arr _ q 0) ▁ , ▁) ; ▁ , ▁en tr y _ point _ f lo w _ co ntr o l _ lo o p _ pipe ▁ f lo w _ co ntr o l _ lo o p _ pipe _ U ( ▁ , ▁. a p _ clk ( a p _ clk ) , ▁ , ▁. a p _ rst ( a p _ rst ) , ▁ , ▁. a p _ start ( a p _ start ) , ▁ , ▁. a p _ ready ( a p _ ready ) , ▁ , ▁. a p _ done ( a p _ done ) , ▁ , ▁. a p _ start _ int ( a p _ start _ int ) , ▁ , ▁. a p _ lo o p _ init ( a p _ lo o p _ init ) , ▁ , ▁. a p _ ready _ int ( a p _ ready _ int ) , ▁ , ▁. a p _ lo o p _ ex it _ ready ( a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0) , ▁ , ▁. a p _ lo o p _ ex it _ done ( a p _ done _ int ) , ▁ , ▁. a p _ continue _ int ( a p _ continue _ int ) , ▁ , ▁. a p _ done _ int ( a p _ done _ int ) , ▁ , ▁. a p _ continue (1' b 1) ▁ , ▁) ; ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ C S _ fsm ▁< = ▁a p _ ST _ fsm _ p p 0_ sta ge 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ C S _ fsm ▁< = ▁a p _ N S _ fsm ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ done _ reg ▁< = ▁1' b 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁if ▁(( a p _ continue _ int ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁a p _ done _ reg ▁< = ▁1' b 0 ; ▁ , ▁end ▁el se ▁if ▁((( a p _ lo o p _ ex it _ ready ▁= = ▁1' b 1) ▁ & ▁(1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁a p _ done _ reg ▁< = ▁1' b 1 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ en a b le _ reg _ p p 0_ i ter 1 ▁< = ▁1' b 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁if ▁((1' b 1 ▁= = ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0)) ▁b eg in ▁ , ▁a p _ en a b le _ reg _ p p 0_ i ter 1 ▁< = ▁1' b 0 ; ▁ , ▁end ▁el se ▁if ▁(( (1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁a p _ en a b le _ reg _ p p 0_ i ter 1 ▁< = ▁a p _ start _ int ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁((1' b 1 ▁= = ▁a p _ cond ition _ 85 )) ▁b eg in ▁ , ▁if ▁(( ic mp _ ln 9_ fu _9 7_ p 2 ▁= = ▁1' d 1)) ▁b eg in ▁ , ▁ i _ fu _4 6 ▁< = ▁a dd _ ln 9_ fu _10 3_ p 2 ; ▁ , ▁end ▁el se ▁if ▁(( a p _ lo o p _ init ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁ i _ fu _4 6 ▁< = ▁ 3 1 ' d 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁b eg in ▁ , ▁if ▁(( (1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ 1 100 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁ s um _ fu _4 2 ▁< = ▁32 ' d 0 ; ▁ , ▁end ▁el se ▁if ▁(( a p _ en a b le _ reg _ p p 0_ i ter 1 ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁ s um _ fu _4 2 ▁< = ▁ s um _ 1_ fu _12 2_ p 2 ; ▁ , ▁end ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( ic mp _ ln 9_ fu _9 7_ p 2 ▁= = ▁1' d 0) ▁ & ▁(1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ ex it _ ready ▁= = ▁1' b 1) ▁ & ▁(1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁a p _ done _ int ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ done _ int ▁= ▁a p _ done _ reg ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ idle _ p p 0 ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0) ▁ & ▁( a p _ start _ int ▁= = ▁1' b 0)) ) ▁b eg in ▁ , ▁a p _ idle ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ idle ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ en a b le _ reg _ p p 0_ i ter 1 ▁= = ▁1' b 0) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 0)) ) ▁b eg in ▁ , ▁a p _ idle _ p p 0 ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ idle _ p p 0 ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( (1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁a p _ ready _ int ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ ready _ int ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁(1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ i _ 1 ▁= ▁ 3 1 ' d 0 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ i _ 1 ▁= ▁ i _ fu _4 6 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( (1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁if ▁((( a p _ lo o p _ init ▁= = ▁1' b 1) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1)) ) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ s um _ lo a d _ 1 ▁= ▁32 ' d 0 ; ▁ , ▁end ▁el se ▁if ▁(( a p _ en a b le _ reg _ p p 0_ i ter 1 ▁= = ▁1' b 1)) ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ s um _ lo a d _ 1 ▁= ▁ s um _ 1_ fu _12 2_ p 2 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ s um _ lo a d _ 1 ▁= ▁ s um _ fu _4 2 ; ▁ , ▁end ▁ , ▁end ▁el se ▁b eg in ▁ , ▁a p _ s ig _ al loc a c mp _ s um _ lo a d _ 1 ▁= ▁ s um _ fu _4 2 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁(( (1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ 1 100 1) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁arr _ ce 0 ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁arr _ ce 0 ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁if ▁((( ic mp _ ln 9_ fu _9 7_ p 2 ▁= = ▁1' d 0) ▁ & ▁(1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ 1 100 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ) ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 1 ; ▁ , ▁end ▁el se ▁b eg in ▁ , ▁temptemp 1_ a p _ vld ▁= ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁ ca se ▁( a p _ C S _ fsm ) ▁ , ▁a p _ ST _ fsm _ p p 0_ sta ge 0 ▁ : ▁b eg in ▁ , ▁a p _ N S _ fsm ▁= ▁a p _ ST _ fsm _ p p 0_ sta ge 0 ; ▁ , ▁end ▁ , ▁de f a ult ▁ : ▁b eg in ▁ , ▁a p _ N S _ fsm ▁= ▁ ' b x ; ▁ , ▁end ▁ , ▁end ca se ▁ , ▁end ▁ , ▁ as sign ▁a dd _ ln 9_ fu _10 3_ p 2 ▁= ▁( a p _ s ig _ al loc a c mp _ i _ 1 ▁ + ▁ 3 1 ' d 1) ; ▁ , ▁ as sign ▁a p _ C S _ fsm _ p p 0_ sta ge 0 ▁= ▁a p _ C S _ fsm [32 ' d 0] ; ▁ , ▁ as sign ▁a p _ b loc k _ p p 0_ sta ge 0 ▁= ▁ ~ (1' b 1 ▁= = ▁1' b 1) ; ▁ , ▁ as sign ▁a p _ b loc k _ p p 0_ sta ge 0_ 0 100 1 ▁= ▁ ~ (1' b 1 ▁= = ▁1' b 1) ; ▁ , ▁ as sign ▁a p _ b loc k _ p p 0_ sta ge 0_ 1 100 1 ▁= ▁ ~ (1' b 1 ▁= = ▁1' b 1) ; ▁ , ▁ as sign ▁a p _ b loc k _ p p 0_ sta ge 0_ sub done ▁= ▁ ~ (1' b 1 ▁= = ▁1' b 1) ; ▁ , ▁ as sign ▁a p _ b loc k _ state 1_ p p 0_ sta ge 0_ i ter 0 ▁= ▁ ~ (1' b 1 ▁= = ▁1' b 1) ; ▁ , ▁ as sign ▁a p _ b loc k _ state 2_ p p 0_ sta ge 0_ i ter 1 ▁= ▁ ~ (1' b 1 ▁= = ▁1' b 1) ; ▁ , ▁ al w ay s ▁@ ▁(* ) ▁b eg in ▁ , ▁a p _ cond ition _ 85 ▁= ▁((1' b 0 ▁= = ▁a p _ b loc k _ p p 0_ sta ge 0_ 1 100 1) ▁ & ▁( a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= = ▁1' b 1) ▁ & ▁(1' b 1 ▁= = ▁a p _ C S _ fsm _ p p 0_ sta ge 0)) ; ▁ , ▁end ▁ , ▁ as sign ▁a p _ en a b le _ p p 0 ▁= ▁( a p _ idle _ p p 0 ▁ ^ ▁1' b 1) ; ▁ , ▁ as sign ▁a p _ en a b le _ reg _ p p 0_ i ter 0 ▁= ▁a p _ start _ int ; ▁ , ▁ as sign ▁a p _ lo o p _ ex it _ ready ▁= ▁a p _ cond ition _ ex it _ p p 0_ i ter 0_ sta ge 0 ; ▁ , ▁ as sign ▁a p _ return ▁= ▁32 ' d 0 ; ▁ , ▁ as sign ▁arr _ a dd re s s 0 ▁= ▁ i _ cas t 1_ fu _10 9_ p 1 ; ▁ , ▁ as sign ▁ i _ cas t 1_ fu _10 9_ p 1 ▁= ▁a p _ s ig _ al loc a c mp _ i _ 1 ; ▁ , ▁ as sign ▁ i _ cas t _ fu _9 3_ p 1 ▁= ▁a p _ s ig _ al loc a c mp _ i _ 1 ; ▁ , ▁ as sign ▁ ic mp _ ln 9_ fu _9 7_ p 2 ▁= ▁(( $ signed ( i _ cas t _ fu _9 3_ p 1) ▁< ▁ $ signed ( n )) ▁ ? ▁1' b 1 ▁ : ▁1' b 0) ; ▁ , ▁ as sign ▁ s um _ 1_ fu _12 2_ p 2 ▁= ▁( arr _ q 0 ▁ + ▁ s um _ fu _4 2) ; ▁ , ▁ as sign ▁temptemp 1 ▁= ▁a p _ s ig _ al loc a c mp _ s um _ lo a d _ 1 ; ▁ , ▁endmodule ▁ , ▁ module ▁en tr y _ point _ arr _ R A M _ A U T O _ 1 R 1 W ▁( ▁ , ▁a dd re s s 0 , ▁ce 0 , ▁ q 0 , ▁ , ▁ reset , ▁clk ) ; ▁ , ▁pa ra meter ▁ D a t a W id t h ▁= ▁32 ; ▁ , ▁pa ra meter ▁A dd re s s W id t h ▁= ▁ 7 ; ▁ , ▁pa ra meter ▁A dd re s s R a n ge ▁= ▁ 100 ; ▁ , ▁input [ A dd re s s W id t h - 1:0] ▁a dd re s s 0 ; ▁ , ▁input ▁ce 0 ; ▁ , ▁ out put ▁reg [ D a t a W id t h - 1:0] ▁ q 0 ; ▁ , ▁input ▁ reset ; ▁ , ▁input ▁clk ; ▁ , ▁reg ▁[ D a t a W id t h - 1:0] ▁r o m 0 [ 0 : A dd re s s R a n ge - 1] ; ▁ , ▁ in iti al ▁b eg in ▁ , ▁r o m 0 [ 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 6 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 7 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 14 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 15 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 16 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 7 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 8 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 1 9 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2 4 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 25 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 26 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 2 7 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 28 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 29 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [32 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 4 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 5 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 6 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 7 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 8 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [3 9 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 44 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 45 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 6 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 47 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 48 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 4 9 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 54 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 5 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 6 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 57 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 8 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 5 9 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 6 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 6 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 6 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 6 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 64 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 65 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 6 6 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 67 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 68 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 69 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 7 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 7 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 7 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 73 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 74 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 75 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 76 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 7 7 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 78 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 79 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 4 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 85 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 6 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 87 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 8 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 8 9 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 0] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 1] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 2] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 3] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 4 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 5 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 96 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 97 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 98 ] = 8 ' h 0 ; ▁ , ▁r o m 0 [ 9 9 ] = 8 ' h 0 ; ▁ , ▁end ▁ , ▁ al w ay s ▁@ ( pos ed ge ▁clk ) ▁ , ▁b eg in ▁ , ▁if ▁( ce 0) ▁ , ▁b eg in ▁ , ▁ q 0 ▁< = ▁r o m 0 [ a dd re s s 0] ; ▁ , ▁end ▁ , ▁end ▁ , ▁endmodule ▁ , ▁ module ▁en tr y _ point _ f lo w _ co ntr o l _ lo o p _ pipe ( ▁ , ▁a p _ clk , ▁ , ▁a p _ rst , ▁ , ▁a p _ start , ▁ , ▁a p _ ready , ▁ , ▁a p _ done , ▁ , ▁a p _ continue , ▁ , ▁a p _ start _ int , ▁ , ▁a p _ ready _ int , ▁ , ▁a p _ done _ int , ▁ , ▁a p _ continue _ int , ▁ , ▁a p _ lo o p _ init , ▁ , ▁a p _ lo o p _ ex it _ ready , ▁ , ▁a p _ lo o p _ ex it _ done ▁ , ▁) ; ▁ , ▁input ▁a p _ clk ; ▁ , ▁input ▁a p _ rst ; ▁ , ▁input ▁a p _ start ; ▁ , ▁ out put ▁a p _ ready ; ▁ , ▁ out put ▁a p _ done ; ▁ , ▁input ▁a p _ continue ; ▁ , ▁ out put ▁a p _ start _ int ; ▁ , ▁input ▁a p _ ready _ int ; ▁ , ▁input ▁a p _ done _ int ; ▁ , ▁ out put ▁a p _ continue _ int ; ▁ , ▁ out put ▁a p _ lo o p _ init ; ▁ , ▁reg ▁a p _ lo o p _ init ; ▁ , ▁input ▁a p _ lo o p _ ex it _ ready ; ▁ , ▁input ▁a p _ lo o p _ ex it _ done ; ▁ , ▁ in iti al ▁b eg in ▁ , ▁# 0 ▁a p _ lo o p _ init ▁= ▁1' b 1 ; ▁ , ▁end ▁ , ▁ as sign ▁a p _ start _ int ▁= ▁a p _ start ; ▁ , ▁ as sign ▁a p _ continue _ int ▁= ▁a p _ continue ; ▁ , ▁ as sign ▁a p _ done ▁= ▁a p _ lo o p _ ex it _ done ; ▁ , ▁ as sign ▁a p _ ready ▁= ▁a p _ lo o p _ ex it _ ready ; ▁ , ▁ al w ay s ▁@ ▁( pos ed ge ▁a p _ clk ) ▁ , ▁b eg in ▁ , ▁if ▁( a p _ rst ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ lo o p _ init ▁< = ▁1' b 1 ; ▁ , ▁end ▁el se ▁if ( a p _ lo o p _ ex it _ ready ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ lo o p _ init ▁< = ▁1' b 1 ; ▁ , ▁end ▁el se ▁if ( a p _ ready _ int ▁= = ▁1' b 1) ▁b eg in ▁ , ▁a p _ lo o p _ init ▁< = ▁1' b 0 ; ▁ , ▁end ▁ , ▁end ▁ , ▁endmodule
