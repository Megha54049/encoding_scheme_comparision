#include <stdio.h> @ @ int entry_point ( int ( *speed ) , int ( *time ) , int ( *temptemp1 ) ) { @ int distance ; @ ; @ ; @ distance = ( *speed ) * ( *time ) ; @ { @ ( *temptemp1 ) = distance ; @ ; @ } @ return 0 ; @ }
#include <stdio.h> @ @ int entry_point ( int ( *a ) , int ( *b ) , int ( *temptemp1 ) , int ( *temptemp2 ) ) { @ ; @ ; @ ( *a ) = ( *a ) + ( *b ) ; @ ( *b ) = ( *a ) - ( *b ) ; @ ( *a ) = ( *a ) - ( *b ) ; @ { @ ( *temptemp1 ) = ( *a ) ; @ ( *temptemp2 ) = ( *b ) ; @ ; @ } @ return 0 ; @ }
#include <stdio.h> @ @ int entry_point ( int ( *N ) , int ( *arr ) , int ( *temptemp1 ) , int ( *temptemp2 ) ) @ { @ int odd ; @ int even ; @ int i ; @ even = 0 ; @ odd = 0 ; @ for ( i = 0 ; i < ( *N ) ; i++ ) @ { @ if ( arr [ i ] % 2 == 0 ) @ { @ even = even + 1 ; @ } @ else @ { @ odd = odd + 1 ; @ } @ } @ { @ ( *temptemp1 ) = even ; @ ; @ } @ { @ ( *temptemp2 ) = odd ; @ ; @ } @ return 0 ; @ }
#include <stdio.h> @ @ int entry_point ( int ( *temptemp1 ) , int ( *temptemp2 ) , int ( *temptemp3 ) , int ( *temptemp4 ) ) { @ int size_char = sizeof ( char ) ; @ int size_int = sizeof ( int ) ; @ int size_float = sizeof ( float ) ; @ int size_long_int = sizeof ( long int ) ; @ { @ ( *temptemp1 ) = size_char ; @ ; @ } @ { @ ( *temptemp2 ) = size_int ; @ ; @ } @ { @ ( *temptemp3 ) = size_float ; @ ; @ } @ { @ ( *temptemp4 ) = size_long_int ; @ ; @ } @ return 0 ; @ }
#include <stdio.h> @ @ int entry_point(int (*n), int (*temptemp1)) @ { @ int arr[100]; @ int i; @ int sum = 0; @ ; @ for( i = 0; i < (*n); i++ ) @ { @ sum = sum + arr[i]; @ } @ { @ (*temptemp1) = sum ; @ ; @ } @ return 0; @ }
